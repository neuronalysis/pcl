Generatoren

1. Ansatz: Methode span_tokenize()
(sollte ein Generator sein)
spans = punkt.span_tokenize(text)
sentences = (text[start:end] for start, end in spans)
→ vermeidet eine Kopie (Liste), stadessen nur Ausschnie on demand


2. Ansatz: zeilenweise Verarbeitung der Eingabedatei
def iter_sentences(stream):
'Iterate over sentences from a text stream.'
for line in stream:
for start, end in punkt.span_tokenize(line):
yield line[start:end]
with open('large_corpus.txt') as f:
sentences = iter_sentences(f)
with open('large_corpus.sents.txt', 'w') as f:
for sentence in sentences:
f.write(sentence)
f.write('\n')
→ gesamter Text ist immer noch (in mehrfachen Kopien) irgendwann im Speicher,
aber nicht mehr gleichzeiঞg



XML Processing

def main():
'Run as script: file name as argument, output to STDOUT.'
fn = sys.argv[1]
for entry in extract(fn):
print(*entry, sep='\t')
def extract(fn):
'Get author names, years, and titles from a Medline XML.'
meta = []
tree = ET.parse(fn)
for article in tree.iterfind('.//PubmedArticle'):
title = article.findtext('.//ArticleTitle')
year = article.findtext('.//ArticleDate/Year')
authors = ', '.join(
name.text
for name in article.iterfind('.//AuthorList/Author/LastName'))
meta.append((authors, year, title))
return meta 




Thema
- Im Fokus dieser Übung steht Arbeit mit grossen
Datenmengen
- Daher gilt:
- Ein Skript, das nicht korrekt mit grossen Datenmengen umgeht, gilt
als NICHT FUNKTIONAL => Nicht bestanden
- Testen am besten mit Task Manager (Windows) oder System Monitor
(UNIX)
- Benutzt kleinere Testdaten um euer Skript zu testen
- Arbeitet absturzsicher


Aufgabe 1: Deduplizierung mit Zählen
- Macht euch mit den Daten vertraut
- lxml-Modul zum Parsen von XML benutzen
- glob-Modul zum Auslesen aller Dateien in einem Ordner
benutzen
- Lemmas benutzen
- Sätze erst ab einer Länge von 6 berücksichtigen!
- Der Algorithmus selbst ist demjenigen, den ihr in der
Vorlesung kennengelernt habt, sehr ähnlich!


Aufgabe 2: Randomisierung
- Wieder gilt: Macht euch mit den Daten vertraut
- lxml hilft euch beim Parsen
- Auch hier könnt ihr euch an den Vorlesungsfolien
orientieren

Abgabe
- PEP 8 beachten!
- Skript ist als Modul zu verfassen!